@using Microsoft.AspNet.Identity
@using AgingInHome.Models
@model AgingInHome.Models.RegisterViewModel
@{
    ViewBag.Title = "ServiceRequest";
    var userid = User.Identity.GetUserId();
    Layout = "~/Views/Shared/_Layoutnew1.cshtml";
}
@using (Html.BeginForm())
{

       <!-- Main Container -->
    <div class="main-container inner-container">
        <div class="container">
            <h1 class="main-title">Client Service <span>Request</span></h1>
            <!-- ServiceRequest Section -->
            <!-- Form Step Section -->
            <div class="stepwizard">
                <div class="stepwizardSection">
                    <div class="stepwizardRow">
                        <div class="stepwizard-step">
                            <a href="#step-1" type="button" class="btn active btn-circle">1</a>
                        </div>
                        <div class="stepwizard-step">
                            <a href="#step-2" type="button" class="btn btn-default btn-circle" disabled="disabled">2</a>
                        </div>
                        <div class="stepwizard-step">
                            <a href="#step-3" type="button" class="btn btn-default btn-circle" disabled="disabled">3</a>
                        </div>
                        <div class="stepwizard-step">
                            <a href="#step-4" type="button" class="btn btn-default btn-circle" disabled="disabled">4</a>
                        </div>
                    </div>
                </div>
            </div>
            <!-- //Form Step Section -->
            <!-- Form ContentBox Section -->
            <div class="contentBox clearfix default-form">

                <!-- Form Step 1 -->
                <div class="row step-content" id="step-1">
                    <div class="col-xs-12">
                        <h3>Personal Detail</h3>
                    </div>

                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @placeholder = "First Name", @maxlength = "100" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Last Name", @maxlength = "100" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.EditorFor(model => model.TypeOfMedicalInsurance, new { htmlAttributes = new { @class = "form-control", @placeholder = "Type of Medical Insurance", @maxlength = "100" } })
                            @Html.ValidationMessageFor(model => model.TypeOfMedicalInsurance, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-4">
                        <div class="form-group">
                            <select name="Gender" class="selectpicker">
                                <option>Select Gender</option>
                                <option value="Male">Male</option>
                                <option value="Female">Female</option>
                            </select>
                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control numriconly", @placeholder = "Age", @maxlength = "4" } })
                            @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-4">
                        <div class="form-group">
                            @*<select name="Relation" id="Relation" class="selectpicker">
                                <option value="">Select relation</option>
                                <option value="Spouse/Partner">Spouse/Partner</option>
                                <option value="Parent">Parent</option>
                                <option value="Other Relative">Other Relative</option>
                                <option value="Friend">Friend</option>
                                <option value="Client">Client</option>
                                <option value="Myself">Myself</option>
                            </select>*@
                            
                            @Html.DropDownListFor(model => model.Relation, (List<SelectListItem>)ViewBag.RelationList, new { @class = "selectpicker" })
                            @Html.ValidationMessageFor(model => model.Relation, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-xs-12 form-button text-center">
                        <button class="btn btn-primary nextBtn" type="button">Next</button>
                    </div>
                </div>
                <!-- //Form Step 1 -->
                <!-- Form Step 2 -->
                <div class="row step-content" id="step-2">
                    <div class="col-xs-12">
                        <h3>Login Detail</h3>
                    </div>

                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email Address", @maxlength = "100" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @placeholder = "Password", @maxlength = "10" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @placeholder = "Confirm password", @maxlength = "10" } })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-xs-12 form-button text-center">
                        <button class="btn btn-primary prevBtn" type="button">Previous</button>
                        <button class="btn btn-primary nextBtn" type="button">Next</button>
                    </div>

                </div>
                <!-- //Form Step 2 -->
                <!-- Form Step 3 -->
                <div class="row step-content" id="step-3">
                    <div class="col-xs-12">
                        <h3>Personal Detail</h3>
                    </div>

                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @placeholder = "Address", @maxlength = "400" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", @placeholder = "City", @maxlength = "400" } })
                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.DropDownList("StateId", (SelectList)ViewBag.StateList, "Select the State", new { @class = "selectpicker" })
                            @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control numriconly", @maxlength = "5", @placeholder = "Zip Code" } })
                            @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.EditorFor(model => model.PrimaryPhone, new { htmlAttributes = new { @class = "form-control numriconly", @maxlength = "100", @placeholder = "Primary Phone" } })
                            @Html.ValidationMessageFor(model => model.PrimaryPhone, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.EditorFor(model => model.AlterPhone, new { htmlAttributes = new { @class = "form-control numriconly", @maxlength = "100", @placeholder = "Alter Phone" } })
                            @Html.ValidationMessageFor(model => model.AlterPhone, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-xs-12 form-button text-center">
                        <button class="btn btn-primary prevBtn" type="button">Previous</button>
                        <button class="btn btn-primary nextBtn" type="button">Next</button>
                    </div>
                </div>
                <!-- //Form Step 3 -->
                <!-- Form Step 4 -->
                <div class="row step-content" id="step-4">
                    <div class="col-xs-12">
                        <h2 class="title">Needed Services <span class="req">*</span></h2>
                    </div>
                    <div id="withloginForm">
                        <div class="serviceRequestList hidden-xs">
                            <div class="">
                                @{
                                    List<ProviderCategoryModel> _serviceResutl = (List<ProviderCategoryModel>)ViewBag.categoryList;
                                    int _index = 0;
                                }
                                <div class="col-sm-6">
                                    @for (int i = 0; i < _serviceResutl.Count; i++)
                                    {
                                        if (_index == i)
                                        {
                                            <div class="serviceRequestItem open">
                                                <label class="labelCheckbox"><input type="checkbox" name="SelectedCategory" value="@_serviceResutl[i].Id"><span class="lbl">@_serviceResutl[i].CategoryName </span></label>
                                                <span id="@_serviceResutl[i].Id"></span>
                                            </div>
                                            _index = _index + 2;
                                        }

                                    }
                                </div>
                                <div class="col-sm-6">
                                    @{_index = 1; }
                                    @for (int i = 0; i < _serviceResutl.Count; i++)
                                    {
                                        if (_index == i)
                                        {
                                            <div class="serviceRequestItem open">
                                                <label class="labelCheckbox"><input type="checkbox" name="SelectedCategory" value="@_serviceResutl[i].Id"><span class="lbl">@_serviceResutl[i].CategoryName </span></label>
                                                <span id="@_serviceResutl[i].Id"></span>
                                            </div>
                                            _index = _index + 2;
                                        }

                                    }
                                </div>
                            </div>
                        </div>
                        <div class="serviceRequestList hidden-sm hidden-md hidden-lg">
                            <div class="">
                                @foreach (var category in (List<ProviderCategoryModel>)ViewBag.categoryList)
                                {
                                    <div class="col-sm-6">
                                        <div class="serviceRequestItem open">
                                            <label class="labelCheckbox"><input type="checkbox" name="SelectedCategory" value="@category.Id"><span class="lbl">@category.CategoryName </span></label>
                                            <span id="@category.Id"></span>
                                        </div>
                                    </div>
                                }

                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-12 form-button">
                                <button class="btn btn-primary prevBtn" type="button">Previous</button>
                                <button type="button" class="btn btn-primary btn-next btnSubmit">
                                    <i class="fa fa-spinner fa-pulse fa-fw" hidden="hidden"></i>Submit
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- //Form Step 4 -->

            </div>
            <!-- //Form ContentBox Section -->
            <!-- //ServiceRequest Section -->
        </div>
    </div>
     <!-- //Main Container -->


                                        }



<div id="Dialogbox" title="What you want" style="display: none;">

    @Html.RadioButton("IsDirectContacted", true) &nbsp; Do you want to see the search results <br />
    @Html.RadioButton("IsDirectContacted", false) &nbsp; Do you want us to contact service provider on your behalf<br />

</div>
<div id="confirm" hidden="hidden">
    <p>Have you account with Us?</p>
</div>

<link href="~/Content/jquery-ui.css" rel="stylesheet" />
<script src="//cdnjs.cloudflare.com/ajax/libs/jquery-form-validator/2.3.19/jquery.form-validator.min.js"></script>
<script>
    $(function () {

        $(".numriconly").keydown(function (e) {
            // Allow: backspace, delete, tab, escape, enter and .
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
                // Allow: Ctrl+A, Command+A
                (e.keyCode == 65 && (e.ctrlKey === true || e.metaKey === true)) ||
                // Allow: home, end, left, right, down, up
                (e.keyCode >= 35 && e.keyCode <= 40)) {
                // let it happen, don't do anything
                return;
            }
            // Ensure that it is a number and stop the keypress
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            }
        });

        $("#PrimaryPhone").mask("(000) 000-0000");
        $("#AlterPhone").mask("(000) 000-0000");
        var serviceCategories = [];
        $(".fa-spinner").hide();
        var currentcheckbox;
        //$("#serviceRequest").hide()
        $("#withoutLoginForm").hide();
        $("#withloginForm").hide();
        //$("[type='submit']").click(function () {

        //});


        $("[type='checkbox']").click(function () {

            currentcheckbox = this;
            if ($(this).is(":checked")) {
                $.ajax({
                    url: "@Url.Action("LoadServiceDateAndBestTime","Consumer")",
                    success: function (partialview) {
                        $("#" + $(currentcheckbox).val()).html(partialview);
                        $("select").selectpicker('refresh');
                    }
                })
            }
            else {
                $("#" + $(currentcheckbox).val()).empty();
            }
        });
        if ($("#UserId").val() == "") {

            $("#confirm").dialog({
                closeOnEscape: false,
                open: function (event, ui) {
                    $(".ui-dialog-titlebar-close", ui.dialog | ui).hide();
                },
                title: "Confirmation",
                draggable: false,
                modal: true,
                buttons: {
                    "Yes": function () {
                        window.location.href = "@Url.Action("Login","Account")";
                    },
                    "No": function () {
                        $("#withoutLoginForm").show();
                        $("#withloginForm").show();
                        $("#confirm").dialog('close');
                    }
                }
            });

        }
        else {
            $("#withloginForm").show();

        }

        $("[type='checkbox']").click(function (e) {

            $(this).after().html('<input type="text" name="name" value="" class="form-control" />');
        });

        $(".btnSubmit").click(function (e) {
            debugger;
            var _index = 0;
            $("[type='checkbox']:checked").each(function (index, obj) {
                debugger;
                var catid = $(obj).val();
                var selectedCatDetail = {}
                selectedCatDetail.catId = catid;

                selectedCatDetail.CatserviceDate = $("#" + catid).find(".serviceDate").val();

                if (selectedCatDetail.CatserviceDate == "") {
                    $("#" + catid).find(".serviceErrorMsg").html("Please select service date.");
                    _index++;
                    if (_index == 1)
                        $("#" + catid).find(".serviceDate").focus();
                }
                else {
                    $("#" + catid).find(".serviceErrorMsg").html("");
                }


                selectedCatDetail.CatBestTime = $("#" + catid).find("[name='BestTime']").val();

                if (selectedCatDetail.CatBestTime == "") {
                    $("#" + catid).find(".BestTimeErrorMsg").html("Please select best time.");
                    _index++;
                    if (_index == 1)
                        $("#" + catid).find("[name='BestTime']").focus();
                }
                else {
                    $("#" + catid).find(".BestTimeErrorMsg").html("");
                }



                serviceCategories.push(selectedCatDetail);
            });

            if (_index > 0) {
                serviceCategories = [];
                return false;
            }
            //$(this).attr('disabled', 'disabled');
            if ($("[type='text']").val() != "" && $('select').val() != "") {
                e.preventDefault();
                $(this).attr('disabled', 'disabled');
                $(".fa-spinner").show();
                $.ajax({
                    url: "@Url.Action("ConsumerRegister", "Account")",
                    type: 'POST',
                    data: $("form").serialize(),
                    //contentType: 'application/json; charset=utf-8',
                    success: function (Status) {
                        alert('Consumer Account created. Now creating service request.');
                        $.ajax({
                            url: "@Url.Action("ServiceRequestDetails", "Consumer")",
                            type: 'POST',
                            data: { ServiceRequest: serviceCategories },
                            //contentType: 'application/json; charset=utf-8',
                            success: function (Status) {

                                alert("Successfully Submitted");
                                window.location.href = "@Url.Action("Dashboard","Consumer")";

                                //your success code
                            },

                        });


                        //your success code
                    },
                    error: function () {
                        alert("Successfully Submitted");
                        window.location.href = "@Url.Action("Dashboard","Consumer")";
                    }
                });
            }
            else {
                if ($("#UserId").val() != "") {
                    e.preventDefault();
                    if ($("[type='checkbox']:checked").length > 0) {
                        $(".fa-spinner").show();

                        $.ajax({
                            url: "@Url.Action("ServiceRequestDetails", "Consumer")",
                            type: 'POST',
                            data: { ServiceRequest: serviceCategories },
                            //contentType: 'application/json; charset=utf-8',
                            success: function (Status) {

                                alert("Successfully Submitted");
                                window.location.href = "@Url.Action("Dashboard","Consumer")";

                                //your success code
                            },

                        });

                    }
                    else {
                        alert("please select atleast one category");
                    }
                }
            }


        });


    });

</script>
<style>
    .ui-widget-header {
        background: #1F3F88;
        color: white;
    }

    .validError {
        color: red;
        font-size: 14px;
    }
</style>